#!/bin/sh

#==================================================================================================
#title           :create-iso
#description     :Create a Alpine Linux iso with custom packages
#author          :Wesley van Tilburg
#license         :MIT
#date            :13/10/2022
#version         :0.3
#notes           :This script should be ran on an alpine system/container/chroot
#==================================================================================================

#Check permissions
if ! [ "$(id -u )" -eq 0 ]; then echo "Root is required for this script"; exit 1; fi

#Make sure that the dependencies are installed
apk update && apk upgrade -a
apk add alpine-sdk build-base apk-tools alpine-conf git busybox fakeroot syslinux xorriso squashfs-tools doas mtools dosfstools grub-efi yq

#Setup abuild user
adduser -D build -G abuild
chown -R build:abuild /home/build
echo "permit nopass build" >> /etc/doas.d/doas.conf

su build <<ABUILD
cd ~
git clone --depth=1 https://gitlab.alpinelinux.org/alpine/aports.git
echo | abuild-keygen -i -a
ABUILD


#Create custom overlay
cat << 'Overlay' > /home/build/aports/scripts/genapkovl-setup.sh 
#!/bin/sh -e

HOSTNAME="$1"
IP="192.168.2.19"
if [ -z "$HOSTNAME" ]; then
	echo "usage: $0 hostname"
	exit 1
fi

cleanup() {
	rm -rf "$tmp"
}

makefile() {
	OWNER="$1"
	PERMS="$2"
	FILENAME="$3"
	cat > "$FILENAME"
	chown "$OWNER" "$FILENAME"
	chmod "$PERMS" "$FILENAME"
}

rc_add() {
	mkdir -p "$tmp"/etc/runlevels/"$2"
	ln -sf /etc/init.d/"$1" "$tmp"/etc/runlevels/"$2"/"$1"
}

tmp="$(mktemp -d)"
trap cleanup EXIT

mkdir -p "$tmp"/etc
makefile root:root 0644 "$tmp"/etc/hostname <<EOF
$HOSTNAME
EOF

makefile root:root 0755 "$tmp"/etc/setup-os <<EOF
#!/bin/sh
yes | setup-alpine -f https://git.plabble.org/misthios/Alpine-Unattended/raw/branch/main/answer
mount -t ext4 /dev/sda3 /mnt
sed -i 's#tty1::respawn:./etc/setup-os#tty1::respawn:/sbin/getty 38400 tty1 linux#g' /mnt/etc/inittab 
echo "$HOSTNAME is setup with the following ips: $(ipaddr | grep inet | awk '{printf "%s ip %s\n", $NF, $2}' )" | nc 192.168.2.19 9999
poweroff

EOF

makefile root:root 0644 "$tmp"/etc/answer << EOF
$ANSWER
EOF


mkdir -p "$tmp/etc/apk"
makefile root:root 0644 "$tmp"/etc/apk/world << EOF
alpine-base
EOF



mkdir -p "$tmp"/etc/local.d
makefile root:root 0644 "$tmp/etc/inittab" << EOF

::sysinit:/sbin/openrc sysinit
::sysinit:/sbin/openrc boot
::wait:/sbin/openrc default

# Set up the installer to autorun on tty1
tty1::respawn:./etc/setup-os

# Put a getty on the serial port
#ttyS0::respawn:/sbin/getty -L ttyS0 115200 vt100

# Stuff to do for the 3-finger salute
::ctrlaltdel:/sbin/reboot

# Stuff to do before rebooting
::shutdown:/sbin/openrc shutdown
EOF

rc_add devfs sysinit
rc_add dmesg sysinit
rc_add mdev sysinit
rc_add hwdrivers sysinit
rc_add modloop sysinit

rc_add hwclock boot
rc_add modules boot
rc_add sysctl boot
rc_add hostname boot
rc_add bootmisc boot
rc_add syslog boot

rc_add mount-ro shutdown
rc_add killprocs shutdown
rc_add savecache shutdown

tar -c -C "$tmp" etc | gzip -9n > $HOSTNAME.apkovl.tar.gz

Overlay



#Create custom profile
cat << Profile > /home/build/aports/scripts/mkimg.custom.sh
profile_custom() {
        profile_virt
        apkovl="genapkovl-setup.sh"
}


Profile


su build <<ISO
doas chmod +x ~/aports/scripts/mkimg.custom.sh
doas chmod +x ~/aports/scripts/genapkovl-setup.sh

mkdir -p ~/iso

#create iso
cd ~/aports/scripts
sh mkimage.sh --tag unattended \
	--outdir ~/iso \
	--arch x86_64 \
	--repository http://dl-cdn.alpinelinux.org/alpine/v3.16/main \
	--repository http://dl-cdn.alpinelinux.org/alpine/v3.16/community \
	--profile custom

ISO
